Docker compose Commands:
----------------------------


docker-compose --version/-v

docker-compose up/down

docker-compose config --> syntax check

docker-compose up --scale web=3

docker-compose logs

docker-compose top

docker-compose ps

- Run a docker-compose in Background mode
docker-compose up -d

docker-compose stop

docke-compose rm


----------------------------------------------------------------
version: "3"
services:
  redis:
    image: redis:alpine
    container_name: my_redis

  moby:
    image: russmckendrick/moby-counter
    container_name: my_moby
    ports:
      - "80:80"


-----------------------------------------------------------------

version: '3'

services:
   db:
     image: mysql:5.7
     volumes:
       - db_data:/var/lib/mysql
     restart: always
     environment:
       MYSQL_ROOT_PASSWORD: somewordpress
       MYSQL_DATABASE: wordpress
       MYSQL_USER: wordpress
       MYSQL_PASSWORD: wordpress

   wordpress:
     depends_on:
       - db
     image: wordpress:latest
     ports:
       - "8000:80"
     restart: always
     environment:
       WORDPRESS_DB_HOST: db:3306
       WORDPRESS_DB_USER: wordpress
       WORDPRESS_DB_PASSWORD: wordpress
volumes:
    db_data:
    
----------------------------------------------------------------
Network Declaration :

    networks:
      - webnet
    
networks:
  webnet
----------------------------------------------------------------
Port Forwording:

   ports:
      - "8080-8084:80"

---------------------------------------------------------------
version: '3'

services:
  webapp:
     image: drupal:8-apache
     volumes:
       - /opt/test-1:/var/www/html/
     ports:
      - '8080-8085:80'

volumes:
  /opt/test-1:






Reference Links :
https://www.linode.com/docs/applications/containers/how-to-use-docker-compose/
https://www.callicoder.com/docker-machine-swarm-stack-golang-example/
https://www.youtube.com/watch?v=Qw9zlE3t8Ko
